{"version":3,"file":"static/js/21.29117714.chunk.js","mappings":"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","sources":["webpack://phonebook/./src/components/Phonebook/Phonebook.module.css?3a02","webpack://phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactItem/Modal/Modal.jsx","components/ContactList/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Error/Error.jsx","components/Phonebook/Phonebook.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactInput\":\"Phonebook_contactInput__LxSKY\"};","// extracted by mini-css-extract-plugin\nexport default {\"contactsTitle\":\"Filter_contactsTitle__eTnDx\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import { useDispatch, useSelector } from 'react-redux';\nimport css from './Filter.module.css';\nimport { selectFilter } from 'redux/selectors';\nimport { addFilterSlice } from 'redux/filter/filterSlice';\n\nfunction Filter() {\n  const filetedValue = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = event => {\n    dispatch(addFilterSlice(event.target.value));\n  };\n\n  return (\n    <div>\n      <h2 className={css.contactsTitle}>Contacts</h2>\n      <p>Find contacts by name</p>\n      <input\n        className={`form-control ${css.filterInput}`}\n        name=\"filter\"\n        onChange={handleFilter}\n        value={filetedValue}\n      />\n    </div>\n  );\n}\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactItem\":\"ContactList_contactItem__ppNQ5\",\"btnWrapper\":\"ContactList_btnWrapper__r3YCc\",\"contactBtn\":\"ContactList_contactBtn__We0dD\"};","import { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useDispatch } from 'react-redux';\nimport { editContact } from 'redux/contacts/operations';\n\nconst Modal = ({ toggle, contactId }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const handleKeyEsc = event => {\n      if (event.code === 'Escape') {\n        toggle();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyEsc);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyEsc);\n      document.body.style.overflow = 'auto';\n    };\n  }, [toggle]);\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      toggle();\n    }\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return 'invalid name';\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (name || number) {\n      const updatedContact = {};\n      if (name) {\n        updatedContact.name = name;\n      }\n      if (number) {\n        updatedContact.number = number;\n      }\n\n      dispatch(\n        editContact({\n          contactId,\n          body: updatedContact,\n        })\n      );\n\n      setName('');\n      setNumber('');\n      toggle();\n    }\n  };\n\n  return ReactDOM.createPortal(\n    <div\n      className=\"modal fade show\"\n      style={{\n        display: 'block',\n        backdropFilter: 'blur(5px)',\n      }}\n      onClick={handleBackdropClick}\n    >\n      <div className=\"modal-dialog\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h1 className=\"modal-title fs-5\">Edit menu</h1>\n            <button\n              type=\"button\"\n              className=\"btn-close\"\n              aria-label=\"Close\"\n              onClick={toggle}\n            ></button>\n          </div>\n          <div className=\"modal-body\">\n            <form onSubmit={handleSubmit}>\n              <label htmlFor=\"ModalNameInput\" className=\"form-label\">\n                Edited name\n              </label>\n              <input\n                className=\"form-control\"\n                style={{ marginBottom: '16px' }}\n                id=\"ModalNameInput\"\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                onChange={handleChange}\n                value={name}\n              />\n              <label htmlFor=\"ModalNumberInput\" className={`form-label`}>\n                Edited number\n              </label>\n              <input\n                className=\"form-control\"\n                style={{ marginBottom: '20px' }}\n                id=\"ModalNumberInput\"\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                onChange={handleChange}\n                value={number}\n              />\n              {name || number ? (\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  style={{ display: 'block', marginLeft: 'auto' }}\n                >\n                  Edit Contact\n                </button>\n              ) : (\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  style={{ display: 'block', marginLeft: 'auto' }}\n                  disabled\n                >\n                  Edit Contact\n                </button>\n              )}\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>,\n    document.querySelector('#popup-root')\n  );\n};\n\nexport default Modal;\n","import { useState } from 'react';\nimport { Oval } from 'react-loader-spinner';\nimport css from '../ContactList.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContactOp } from 'redux/contacts/operations';\nimport Modal from './Modal/Modal';\n\nconst ContactItem = ({ contact }) => {\n  const [showModal, setShowModal] = useState(false);\n  const dispatch = useDispatch();\n  const [isLoadingEl, setIsLoadingEl] = useState(false);\n\n  const handleDeleteContact = contactId => {\n    setIsLoadingEl(true);\n    dispatch(deleteContactOp(contactId));\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  return (\n    <>\n      <li key={contact.id} className={`list-group-item ${css.contactItem}`}>\n        <p style={{ margin: '0' }}>\n          {contact.name}: {contact.number}\n        </p>\n\n        <div className={css.btnWrapper}>\n          <button\n            type=\"button\"\n            className={`${css.contactBtn} btn btn-light`}\n            onClick={toggleModal}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              x=\"0px\"\n              y=\"0px\"\n              width=\"20\"\n              height=\"20\"\n              viewBox=\"0 0 30 30\"\n            >\n              <path d=\"M 22.828125 3 C 22.316375 3 21.804562 3.1954375 21.414062 3.5859375 L 19 6 L 24 11 L 26.414062 8.5859375 C 27.195062 7.8049375 27.195062 6.5388125 26.414062 5.7578125 L 24.242188 3.5859375 C 23.851688 3.1954375 23.339875 3 22.828125 3 z M 17 8 L 5.2597656 19.740234 C 5.2597656 19.740234 6.1775313 19.658 6.5195312 20 C 6.8615312 20.342 6.58 22.58 7 23 C 7.42 23.42 9.6438906 23.124359 9.9628906 23.443359 C 10.281891 23.762359 10.259766 24.740234 10.259766 24.740234 L 22 13 L 17 8 z M 4 23 L 3.0566406 25.671875 A 1 1 0 0 0 3 26 A 1 1 0 0 0 4 27 A 1 1 0 0 0 4.328125 26.943359 A 1 1 0 0 0 4.3378906 26.939453 L 4.3632812 26.931641 A 1 1 0 0 0 4.3691406 26.927734 L 7 26 L 5.5 24.5 L 4 23 z\"></path>\n            </svg>\n          </button>\n\n          {isLoadingEl ? (\n            <Oval\n              width={30}\n              height={30}\n              wrapperStyle={{ marginRight: '22px', marginLeft: '20px' }}\n            />\n          ) : (\n            <button\n              type=\"button\"\n              className={`btn btn-secondary ${css.contactBtn}`}\n              onClick={() => handleDeleteContact(contact.id)}\n            >\n              Delete\n            </button>\n          )}\n        </div>\n      </li>\n\n      {showModal && <Modal toggle={toggleModal} contactId={contact.id} />}\n    </>\n  );\n};\n\nexport default ContactItem;\n","import { useSelector } from 'react-redux';\nimport css from './ContactList.module.css';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport ContactItem from './ContactItem/ContactItem';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filterValue = useSelector(selectFilter);\n\n  const getFilteredContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue.toLowerCase())\n    );\n  };\n\n  const filteredContacts = getFilteredContacts();\n  return (\n    <ul className={`list-group list-group-flush ${css.contactList}`}>\n      {filteredContacts.length > 0 ? (\n        filteredContacts.map(contactEl => (\n          <ContactItem key={contactEl.id} contact={contactEl} />\n        ))\n      ) : contacts.length > 0 ? (\n        <h4>No contacts found</h4>\n      ) : (\n        <h3>No contacts added yet</h3>\n      )}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\n\nconst Error = () => {\n  return (\n    <div style={{ color: 'red', fontSize: '30px' }}>\n      An error occured, please try again later\n    </div>\n  );\n};\n\nexport default Error;\n","import { useEffect, useState } from 'react';\nimport css from './Phonebook.module.css';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { addContactOp, fetchContactsOp } from 'redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectError,\n  selectIsRefreshing,\n} from 'redux/selectors';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport Error from 'components/Error/Error';\nimport Refresh from 'components/Refresh/Refresh';\n\nfunction Phonebook() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isRefreshing = useSelector(selectIsRefreshing);\n\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContactsOp());\n  }, [dispatch]);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return 'invalid name';\n    }\n  };\n\n  const addContact = (name, number) => {\n    const isNameExists = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isNameExists) {\n      return Notify.failure(`${name} is already in contacts.`);\n    }\n\n    const newContact = {\n      name,\n      number,\n      id: nanoid(),\n    };\n\n    dispatch(addContactOp(newContact));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    addContact(name, number);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      {isRefreshing ? (\n        <Refresh />\n      ) : (\n        <div>\n          <h1 className={css.phonebookTitle}>Phonebook</h1>\n          <form onSubmit={handleSubmit}>\n            <label\n              htmlFor=\"nameInput\"\n              className={`form-label ${css.formLabel}`}\n            >\n              Name\n            </label>\n            <input\n              className={`form-control ${css.contactInput}`}\n              id=\"nameInput\"\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              onChange={handleChange}\n              value={name}\n            />\n            <label\n              htmlFor=\"numberInput\"\n              className={`form-label ${css.formLabel}`}\n            >\n              Number\n            </label>\n            <input\n              className={`form-control ${css.contactInput}`}\n              id=\"numberInput\"\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              onChange={handleChange}\n              value={number}\n            />\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Add Contact\n            </button>\n          </form>\n        </div>\n      )}\n\n      <Filter />\n      {error ? <Error /> : <ContactList />}\n    </>\n  );\n}\n\nexport default Phonebook;\n"],"names":["filetedValue","useSelector","selectFilter","dispatch","useDispatch","_jsxs","children","_jsx","className","css","concat","name","onChange","event","addFilterSlice","target","value","_ref","toggle","contactId","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","useEffect","handleKeyEsc","code","window","addEventListener","document","body","style","overflow","removeEventListener","handleChange","_event$target","ReactDOM","display","backdropFilter","onClick","currentTarget","type","onSubmit","preventDefault","updatedContact","editContact","htmlFor","marginBottom","id","pattern","title","marginLeft","disabled","querySelector","contact","showModal","setShowModal","isLoadingEl","setIsLoadingEl","toggleModal","_Fragment","margin","xmlns","x","y","width","height","viewBox","d","Oval","wrapperStyle","marginRight","deleteContactOp","Modal","contacts","selectContacts","filterValue","filteredContacts","filter","toLowerCase","includes","length","map","contactEl","ContactItem","color","fontSize","isRefreshing","selectIsRefreshing","error","selectError","fetchContactsOp","Refresh","some","Notify","newContact","nanoid","addContactOp","addContact","required","Filter","Error","ContactList"],"sourceRoot":""}