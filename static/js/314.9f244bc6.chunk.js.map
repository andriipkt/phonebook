{"version":3,"file":"static/js/314.9f244bc6.chunk.js","mappings":"qPAkGA,EA1FkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MACjBC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GACtBG,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAExBC,EAAe,SAAHC,GAAqC,IAADC,EAAAD,EAA9BE,OAAUC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MACtC,OAAQD,GACN,IAAK,QACH,OAAOZ,EAASa,GAElB,IAAK,WACH,OAAOT,EAAYS,GAErB,QACE,OAEN,EAqBA,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAkBC,MAAO,CAAEC,SAAU,SAAUC,SAAA,EAC5DC,EAAAA,EAAAA,KAAA,OAAKH,MAAO,CAAEI,aAAc,QAASF,UACnCJ,EAAAA,EAAAA,MAAA,MAAAI,SAAA,CAAI,sDACkD,KACpDC,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACC,GAAG,YAAWJ,SAAC,mBAIzBJ,EAAAA,EAAAA,MAAA,QAAMS,SA5BW,SAAAC,GACnBA,EAAMC,iBAENhC,GAASiC,EAAAA,EAAAA,IAAM,CAAE3B,MAAAA,EAAOI,SAAAA,KACrBwB,SACAC,MAAK,kBACJC,EAAAA,GAAAA,QAAc,WAAY,CAAEC,SAAU,KAAMC,SAAU,aAAc,IAErEC,OAAM,SAAAC,GAAK,OACVJ,EAAAA,GAAAA,MAAY,4BAA6B,CACvCC,SAAU,KACVC,SAAU,aACV,IAGN/B,EAAS,IACTI,EAAY,GACd,EAWiCc,SAAA,EAC3BJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBG,SAAA,EACjCC,EAAAA,EAAAA,KAAA,SACEe,KAAK,QACLnB,UAAU,eACVoB,GAAG,kBACHC,YAAY,mBACZxB,KAAK,QACLyB,SAAU7B,EACVK,MAAOd,KAEToB,EAAAA,EAAAA,KAAA,SAAOmB,QAAQ,kBAAiBpB,SAAC,sBAEnCJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBG,SAAA,EACjCC,EAAAA,EAAAA,KAAA,SACEe,KAAK,WACLnB,UAAU,eACVoB,GAAG,qBACHC,YAAY,mBACZG,aAAa,MACb3B,KAAK,WACLyB,SAAU7B,EACVK,MAAOV,KAETgB,EAAAA,EAAAA,KAAA,SAAOmB,QAAQ,qBAAoBpB,SAAC,gBAGrCnB,GAASI,GACRgB,EAAAA,EAAAA,KAAA,UAAQe,KAAK,SAASnB,UAAU,kBAAiBG,SAAC,YAIlDC,EAAAA,EAAAA,KAAA,UAAQe,KAAK,SAASnB,UAAU,kBAAkByB,UAAQ,EAAAtB,SAAC,cAM9Db,IAAac,EAAAA,EAAAA,KAACsB,EAAAA,EAAO,MAG5B,ECzFA,EAJkB,WAChB,OAAOtB,EAAAA,EAAAA,KAACuB,EAAS,GACnB,C","sources":["components/LoginForm/LoginForm.jsx","pages/Login/LoginPage.jsx"],"sourcesContent":["import Refresh from 'components/Refresh/Refresh';\nimport { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { logIn } from 'redux/auth/operations';\nimport { selectLoadingAuth } from 'redux/selectors';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const isLoading = useSelector(selectLoadingAuth);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n\n      case 'password':\n        return setPassword(value);\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    dispatch(logIn({ email, password }))\n      .unwrap()\n      .then(() =>\n        toast.success('Welcome!', { duration: 2500, position: 'top-right' })\n      )\n      .catch(error =>\n        toast.error('Invalid email or password', {\n          duration: 2500,\n          position: 'top-right',\n        })\n      );\n\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div className=\"card p-5 m-auto\" style={{ maxWidth: '600px' }}>\n      <div style={{ marginBottom: '20px' }}>\n        <h3>\n          Not registered yet? Follow the link to sign up now:{' '}\n          <Link to=\"/register\">Register</Link>\n        </h3>\n      </div>\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-floating mb-3\">\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            id=\"LoginInputEmail\"\n            placeholder=\"name@example.com\"\n            name=\"email\"\n            onChange={handleChange}\n            value={email}\n          />\n          <label htmlFor=\"LoginInputEmail\">Email address</label>\n        </div>\n        <div className=\"form-floating mb-3\">\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            id=\"LoginInputPassword\"\n            placeholder=\"name@example.com\"\n            autoComplete=\"off\"\n            name=\"password\"\n            onChange={handleChange}\n            value={password}\n          />\n          <label htmlFor=\"LoginInputPassword\">Password</label>\n        </div>\n\n        {email && password ? (\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Log in\n          </button>\n        ) : (\n          <button type=\"submit\" className=\"btn btn-primary\" disabled>\n            Log in\n          </button>\n        )}\n      </form>\n\n      {isLoading && <Refresh />}\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm/LoginForm';\nimport React from 'react';\n\nconst LoginPage = () => {\n  return <LoginForm />;\n};\n\nexport default LoginPage;\n"],"names":["dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","isLoading","useSelector","selectLoadingAuth","handleChange","_ref","_ref$target","target","name","value","_jsxs","className","style","maxWidth","children","_jsx","marginBottom","Link","to","onSubmit","event","preventDefault","logIn","unwrap","then","toast","duration","position","catch","error","type","id","placeholder","onChange","htmlFor","autoComplete","disabled","Refresh","LoginForm"],"sourceRoot":""}